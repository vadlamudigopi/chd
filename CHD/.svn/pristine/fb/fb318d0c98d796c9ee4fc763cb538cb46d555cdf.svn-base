using CHD.Models;
using NReco.PdfGenerator;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace CHD.Controllers
{
    [SessionCheck]
    public class OfficeSurveyController : Controller
    {
        // GET: OfficeSurvey
        public ActionResult Index()
        {
            try
            {
                var PM = new ProgramsModels();
                string dropdown = PM.GetProgramList("N");
                ViewBag.dropdown = dropdown;
            }
            catch (Exception e)
            {
                return View();
            }
            return View();
        }
        [HttpPost]
        public string view(string uniqueID)
        {
            string html = string.Empty;
            try
            {
                
                var OS = new OfficeSurveyModel();
                var CL = new commonLogic();
                OS.where = " WHERE unique_id = '" + uniqueID+"'";
                CL.dataTable = OS.select();
                CL.pageType = "summary";
                html = CL.ViewHtml();
            }
            catch (Exception e)
            {
                return html;
            }
            return html;
        }
        [HttpPost]
        public ActionResult index(OfficeSurveyModel OS)
        {
            Boolean status;
            try
            {
                status = OS.insert();
            }
            catch (Exception e)
            {
                status = false;
            }
            if (status)
                return RedirectToAction("list", "OfficeSurvey", new { msg = 10 });
            else
                return RedirectToAction("list", "OfficeSurvey", new { msg = 11 });
        }
        public ActionResult list()
        {
            try
            {
                var OS = new OfficeSurveyModel();
                var CL = new commonLogic();
                CL.dataTable = OS.select();
                CL.tableId = "officeSurveyList";
                ViewBag.htmldata = CL.residenceSurveyGridView();
            }
            catch (Exception e)
            {
                return View();
            }
            return View();
        }


        public FileContentResult pdf()
        {
            string html = string.Empty;
            string uniqueId = (string)Request.QueryString["a"];
            string page = (string)Request.QueryString["page"];
            var OS = new OfficeSurveyModel();
            var CL = new commonLogic();
            var htmlToPdf = new HtmlToPdfConverter();
            var pdfContentType = "application/pdf";
            try
            {
                OS.where = " WHERE unique_id = '" + uniqueId+"'";
                CL.dataTable = OS.select();
                CL.pageType = page;
                html = CL.ViewHtml();
                string htmlContent= "<!DOCTYPE html><html lang='en'><head><style><style>body{font-family: 'Poppins', sans-serif;}.h5, h5 {font-size: 1rem; }hr{width: 100%;}hr {margin-top: 1rem;margin-bottom: 1rem;border: 0; border-top: 1px solid rgba(0, 0, 0, 0.1);}.col-md-12{width:100%;}.col-sm-8{width:60%; float:left;}.col-sm-4{width:40%;float:right;}</style></style></head><body>" + html + "</body></html>";
                
                //var htmlToPdf = new NReco.PdfGenerator.HtmlToPdfConverter();
                htmlToPdf.PageFooterHtml = $@"page <span class=""page""></span> of <span class=""topage""></span>";
                var pdfBytes = htmlToPdf.GeneratePdf(htmlContent);
                string fileName = CL.getFileName();
                return File(pdfBytes, "application/pdf", fileName+".pdf"); 
            }
            catch (Exception e)
            {
                CL.getLog("Fail to generate PDF."+e);
                return File(htmlToPdf.GeneratePdf("<b>Something Went wrong!!!</b>", null), pdfContentType);
            }
        }
    }
}